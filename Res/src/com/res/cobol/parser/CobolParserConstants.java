/* Generated By:JavaCC: Do not edit this line. CobolParserConstants.java */
package com.res.cobol.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CobolParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOL = 1;
  /** RegularExpression Id. */
  int SPACECHAR = 2;
  /** RegularExpression Id. */
  int LETTER = 3;
  /** RegularExpression Id. */
  int DIGIT = 4;
  /** RegularExpression Id. */
  int COMMENT = 5;
  /** RegularExpression Id. */
  int SQL_COMMENT = 6;
  /** RegularExpression Id. */
  int SPACE_SEPARATOR = 7;
  /** RegularExpression Id. */
  int SPACECHAR2 = 8;
  /** RegularExpression Id. */
  int DOTCHAR = 9;
  /** RegularExpression Id. */
  int DOT = 10;
  /** RegularExpression Id. */
  int EXEC = 11;
  /** RegularExpression Id. */
  int EXECUTE = 12;
  /** RegularExpression Id. */
  int END_EXEC = 13;
  /** RegularExpression Id. */
  int ACCEPT = 14;
  /** RegularExpression Id. */
  int ACCESS = 15;
  /** RegularExpression Id. */
  int ADD = 16;
  /** RegularExpression Id. */
  int ADDRESS = 17;
  /** RegularExpression Id. */
  int ADVANCING = 18;
  /** RegularExpression Id. */
  int AFTER = 19;
  /** RegularExpression Id. */
  int ALL = 20;
  /** RegularExpression Id. */
  int ALPHABET = 21;
  /** RegularExpression Id. */
  int ALPHABETIC = 22;
  /** RegularExpression Id. */
  int ALPHABETIC_LOWER = 23;
  /** RegularExpression Id. */
  int ALPHABETIC_UPPER = 24;
  /** RegularExpression Id. */
  int ALPHANUMERIC = 25;
  /** RegularExpression Id. */
  int ALPHANUMERIC_EDITED = 26;
  /** RegularExpression Id. */
  int ALSO = 27;
  /** RegularExpression Id. */
  int ALTER = 28;
  /** RegularExpression Id. */
  int ALTERNATE = 29;
  /** RegularExpression Id. */
  int AND = 30;
  /** RegularExpression Id. */
  int ANY = 31;
  /** RegularExpression Id. */
  int APPROXIMATE = 32;
  /** RegularExpression Id. */
  int ARE = 33;
  /** RegularExpression Id. */
  int AREA = 34;
  /** RegularExpression Id. */
  int AREAS = 35;
  /** RegularExpression Id. */
  int ASCENDING = 36;
  /** RegularExpression Id. */
  int ASSIGN = 37;
  /** RegularExpression Id. */
  int AT = 38;
  /** RegularExpression Id. */
  int AUTHOR = 39;
  /** RegularExpression Id. */
  int BEFORE = 40;
  /** RegularExpression Id. */
  int BEGINNING = 41;
  /** RegularExpression Id. */
  int BINARY = 42;
  /** RegularExpression Id. */
  int BLANK = 43;
  /** RegularExpression Id. */
  int BLOCK = 44;
  /** RegularExpression Id. */
  int BOTTOM = 45;
  /** RegularExpression Id. */
  int BY = 46;
  /** RegularExpression Id. */
  int CALL = 47;
  /** RegularExpression Id. */
  int CANCEL = 48;
  /** RegularExpression Id. */
  int CD = 49;
  /** RegularExpression Id. */
  int CF = 50;
  /** RegularExpression Id. */
  int CH = 51;
  /** RegularExpression Id. */
  int CHARACTER = 52;
  /** RegularExpression Id. */
  int CHARACTERS = 53;
  /** RegularExpression Id. */
  int CLASS = 54;
  /** RegularExpression Id. */
  int CLOCK_UNITS = 55;
  /** RegularExpression Id. */
  int CLOSE = 56;
  /** RegularExpression Id. */
  int COBOL = 57;
  /** RegularExpression Id. */
  int CODE = 58;
  /** RegularExpression Id. */
  int CODE_SET = 59;
  /** RegularExpression Id. */
  int COLLATING = 60;
  /** RegularExpression Id. */
  int COLUMN = 61;
  /** RegularExpression Id. */
  int COMMA = 62;
  /** RegularExpression Id. */
  int COMMON = 63;
  /** RegularExpression Id. */
  int COMMUNICATION = 64;
  /** RegularExpression Id. */
  int COMP = 65;
  /** RegularExpression Id. */
  int COMP_1 = 66;
  /** RegularExpression Id. */
  int COMP_2 = 67;
  /** RegularExpression Id. */
  int COMP_3 = 68;
  /** RegularExpression Id. */
  int COMP_4 = 69;
  /** RegularExpression Id. */
  int COMP_5 = 70;
  /** RegularExpression Id. */
  int COMPUTATIONAL = 71;
  /** RegularExpression Id. */
  int COMPUTATIONAL_1 = 72;
  /** RegularExpression Id. */
  int COMPUTATIONAL_2 = 73;
  /** RegularExpression Id. */
  int COMPUTATIONAL_3 = 74;
  /** RegularExpression Id. */
  int COMPUTATIONAL_4 = 75;
  /** RegularExpression Id. */
  int COMPUTATIONAL_5 = 76;
  /** RegularExpression Id. */
  int COMPUTE = 77;
  /** RegularExpression Id. */
  int CONFIGURATION = 78;
  /** RegularExpression Id. */
  int CONTAINS = 79;
  /** RegularExpression Id. */
  int CONTENT = 80;
  /** RegularExpression Id. */
  int CONTINUE = 81;
  /** RegularExpression Id. */
  int CONTROL = 82;
  /** RegularExpression Id. */
  int CONTROLS = 83;
  /** RegularExpression Id. */
  int CONVERTING = 84;
  /** RegularExpression Id. */
  int COPY = 85;
  /** RegularExpression Id. */
  int CORR = 86;
  /** RegularExpression Id. */
  int CORRESPONDING = 87;
  /** RegularExpression Id. */
  int COUNT = 88;
  /** RegularExpression Id. */
  int CURRENCY = 89;
  /** RegularExpression Id. */
  int DATA = 90;
  /** RegularExpression Id. */
  int DATE = 91;
  /** RegularExpression Id. */
  int DATE_COMPILED = 92;
  /** RegularExpression Id. */
  int DATE_WRITTEN = 93;
  /** RegularExpression Id. */
  int DAY = 94;
  /** RegularExpression Id. */
  int DAY_OF_WEEK = 95;
  /** RegularExpression Id. */
  int DBCS = 96;
  /** RegularExpression Id. */
  int DE = 97;
  /** RegularExpression Id. */
  int DEBUG_CONTENTS = 98;
  /** RegularExpression Id. */
  int DEBUG_ITEM = 99;
  /** RegularExpression Id. */
  int DEBUG_LINE = 100;
  /** RegularExpression Id. */
  int DEBUG_NAME = 101;
  /** RegularExpression Id. */
  int DEBUG_SUB_1 = 102;
  /** RegularExpression Id. */
  int DEBUG_SUB_2 = 103;
  /** RegularExpression Id. */
  int DEBUG_SUB_3 = 104;
  /** RegularExpression Id. */
  int DEBUGGING = 105;
  /** RegularExpression Id. */
  int DECIMAL_POINT = 106;
  /** RegularExpression Id. */
  int DECLARATIVES = 107;
  /** RegularExpression Id. */
  int DELETE = 108;
  /** RegularExpression Id. */
  int DELIMITED = 109;
  /** RegularExpression Id. */
  int DELIMITER = 110;
  /** RegularExpression Id. */
  int DEPENDING = 111;
  /** RegularExpression Id. */
  int DESCENDING = 112;
  /** RegularExpression Id. */
  int DESTINATION = 113;
  /** RegularExpression Id. */
  int DETAIL = 114;
  /** RegularExpression Id. */
  int DISABLE = 115;
  /** RegularExpression Id. */
  int DISK = 116;
  /** RegularExpression Id. */
  int DISPLAY = 117;
  /** RegularExpression Id. */
  int DISPLAY_1 = 118;
  /** RegularExpression Id. */
  int DIVIDE = 119;
  /** RegularExpression Id. */
  int DIVISION = 120;
  /** RegularExpression Id. */
  int DOWN = 121;
  /** RegularExpression Id. */
  int DUPLICATES = 122;
  /** RegularExpression Id. */
  int DYNAMIC = 123;
  /** RegularExpression Id. */
  int EGCS = 124;
  /** RegularExpression Id. */
  int EGI = 125;
  /** RegularExpression Id. */
  int ELSE = 126;
  /** RegularExpression Id. */
  int EMI = 127;
  /** RegularExpression Id. */
  int ENABLE = 128;
  /** RegularExpression Id. */
  int END = 129;
  /** RegularExpression Id. */
  int END_ADD = 130;
  /** RegularExpression Id. */
  int END_CALL = 131;
  /** RegularExpression Id. */
  int END_COMPUTE = 132;
  /** RegularExpression Id. */
  int END_DELETE = 133;
  /** RegularExpression Id. */
  int END_DIVIDE = 134;
  /** RegularExpression Id. */
  int END_EVALUATE = 135;
  /** RegularExpression Id. */
  int END_IF = 136;
  /** RegularExpression Id. */
  int END_MULTIPLY = 137;
  /** RegularExpression Id. */
  int END_OF_PAGE = 138;
  /** RegularExpression Id. */
  int END_PERFORM = 139;
  /** RegularExpression Id. */
  int END_READ = 140;
  /** RegularExpression Id. */
  int END_RECEIVE = 141;
  /** RegularExpression Id. */
  int END_RETURN = 142;
  /** RegularExpression Id. */
  int END_REWRITE = 143;
  /** RegularExpression Id. */
  int END_SEARCH = 144;
  /** RegularExpression Id. */
  int END_START = 145;
  /** RegularExpression Id. */
  int END_STRING = 146;
  /** RegularExpression Id. */
  int END_SUBTRACT = 147;
  /** RegularExpression Id. */
  int END_UNSTRING = 148;
  /** RegularExpression Id. */
  int END_WRITE = 149;
  /** RegularExpression Id. */
  int ENDING = 150;
  /** RegularExpression Id. */
  int ENTER = 151;
  /** RegularExpression Id. */
  int ENTRY = 152;
  /** RegularExpression Id. */
  int ENVIRONMENT = 153;
  /** RegularExpression Id. */
  int EOP = 154;
  /** RegularExpression Id. */
  int EQUAL = 155;
  /** RegularExpression Id. */
  int EQUALS = 156;
  /** RegularExpression Id. */
  int ERROR = 157;
  /** RegularExpression Id. */
  int ESI = 158;
  /** RegularExpression Id. */
  int EVALUATE = 159;
  /** RegularExpression Id. */
  int EVERY = 160;
  /** RegularExpression Id. */
  int EXCEPTION = 161;
  /** RegularExpression Id. */
  int EXIT = 162;
  /** RegularExpression Id. */
  int EXTEND = 163;
  /** RegularExpression Id. */
  int EXTERNAL = 164;
  /** RegularExpression Id. */
  int FALSE = 165;
  /** RegularExpression Id. */
  int FD = 166;
  /** RegularExpression Id. */
  int FILE = 167;
  /** RegularExpression Id. */
  int FILE_CONTROL = 168;
  /** RegularExpression Id. */
  int FILLER = 169;
  /** RegularExpression Id. */
  int FINAL = 170;
  /** RegularExpression Id. */
  int FIRST = 171;
  /** RegularExpression Id. */
  int FOOTING = 172;
  /** RegularExpression Id. */
  int FOR = 173;
  /** RegularExpression Id. */
  int FROM = 174;
  /** RegularExpression Id. */
  int FUNCTION = 175;
  /** RegularExpression Id. */
  int FUNCTION_POINTER = 176;
  /** RegularExpression Id. */
  int GENERATE = 177;
  /** RegularExpression Id. */
  int GOBACK = 178;
  /** RegularExpression Id. */
  int GENERIC = 179;
  /** RegularExpression Id. */
  int GIVING = 180;
  /** RegularExpression Id. */
  int GLOBAL = 181;
  /** RegularExpression Id. */
  int GO = 182;
  /** RegularExpression Id. */
  int GREATER = 183;
  /** RegularExpression Id. */
  int GROUP = 184;
  /** RegularExpression Id. */
  int HEADING = 185;
  /** RegularExpression Id. */
  int HIGH_VALUE = 186;
  /** RegularExpression Id. */
  int HIGH_VALUES = 187;
  /** RegularExpression Id. */
  int I_O = 188;
  /** RegularExpression Id. */
  int I_O_CONTROL = 189;
  /** RegularExpression Id. */
  int ID = 190;
  /** RegularExpression Id. */
  int IDENTIFICATION = 191;
  /** RegularExpression Id. */
  int IF = 192;
  /** RegularExpression Id. */
  int IMPLICIT = 193;
  /** RegularExpression Id. */
  int IN = 194;
  /** RegularExpression Id. */
  int INDEX = 195;
  /** RegularExpression Id. */
  int INDEXED = 196;
  /** RegularExpression Id. */
  int INDICATE = 197;
  /** RegularExpression Id. */
  int INITIAL = 198;
  /** RegularExpression Id. */
  int INITIALIZE = 199;
  /** RegularExpression Id. */
  int INITIATE = 200;
  /** RegularExpression Id. */
  int INPUT = 201;
  /** RegularExpression Id. */
  int INPUT_OUTPUT = 202;
  /** RegularExpression Id. */
  int INSPECT = 203;
  /** RegularExpression Id. */
  int INSTALLATION = 204;
  /** RegularExpression Id. */
  int INTO = 205;
  /** RegularExpression Id. */
  int INVALID = 206;
  /** RegularExpression Id. */
  int IS = 207;
  /** RegularExpression Id. */
  int JUST = 208;
  /** RegularExpression Id. */
  int JUSTIFIED = 209;
  /** RegularExpression Id. */
  int JUSTIFY = 210;
  /** RegularExpression Id. */
  int KANJI = 211;
  /** RegularExpression Id. */
  int KEY = 212;
  /** RegularExpression Id. */
  int LABEL = 213;
  /** RegularExpression Id. */
  int LAST = 214;
  /** RegularExpression Id. */
  int LEADING = 215;
  /** RegularExpression Id. */
  int LEFT = 216;
  /** RegularExpression Id. */
  int LENGTH = 217;
  /** RegularExpression Id. */
  int LESS = 218;
  /** RegularExpression Id. */
  int LIMIT = 219;
  /** RegularExpression Id. */
  int LIMITS = 220;
  /** RegularExpression Id. */
  int LINAGE = 221;
  /** RegularExpression Id. */
  int LINAGE_COUNTER = 222;
  /** RegularExpression Id. */
  int LINE = 223;
  /** RegularExpression Id. */
  int LINES = 224;
  /** RegularExpression Id. */
  int LINE_COUNTER = 225;
  /** RegularExpression Id. */
  int LINKAGE = 226;
  /** RegularExpression Id. */
  int LOCK = 227;
  /** RegularExpression Id. */
  int LOCKFILE = 228;
  /** RegularExpression Id. */
  int LOW_VALUE = 229;
  /** RegularExpression Id. */
  int LOW_VALUES = 230;
  /** RegularExpression Id. */
  int MEMORY = 231;
  /** RegularExpression Id. */
  int MERGE = 232;
  /** RegularExpression Id. */
  int MESSAGE = 233;
  /** RegularExpression Id. */
  int MODE = 234;
  /** RegularExpression Id. */
  int MODULES = 235;
  /** RegularExpression Id. */
  int MORE_LABELS = 236;
  /** RegularExpression Id. */
  int MOVE = 237;
  /** RegularExpression Id. */
  int MULTIPLE = 238;
  /** RegularExpression Id. */
  int MULTIPLY = 239;
  /** RegularExpression Id. */
  int NATIVE = 240;
  /** RegularExpression Id. */
  int NEGATIVE = 241;
  /** RegularExpression Id. */
  int NEXT = 242;
  /** RegularExpression Id. */
  int NO = 243;
  /** RegularExpression Id. */
  int NOT = 244;
  /** RegularExpression Id. */
  int NULL = 245;
  /** RegularExpression Id. */
  int NULLS = 246;
  /** RegularExpression Id. */
  int NUMBER = 247;
  /** RegularExpression Id. */
  int NUMERIC = 248;
  /** RegularExpression Id. */
  int NUMERIC_EDITED = 249;
  /** RegularExpression Id. */
  int OBJECT = 250;
  /** RegularExpression Id. */
  int OBJECT_COMPUTER = 251;
  /** RegularExpression Id. */
  int OCCURS = 252;
  /** RegularExpression Id. */
  int OF = 253;
  /** RegularExpression Id. */
  int OFF = 254;
  /** RegularExpression Id. */
  int OMITTED = 255;
  /** RegularExpression Id. */
  int ON = 256;
  /** RegularExpression Id. */
  int OPEN = 257;
  /** RegularExpression Id. */
  int OPTIONAL = 258;
  /** RegularExpression Id. */
  int OR = 259;
  /** RegularExpression Id. */
  int ORDER = 260;
  /** RegularExpression Id. */
  int ORGANIZATION = 261;
  /** RegularExpression Id. */
  int OTHER = 262;
  /** RegularExpression Id. */
  int OUTPUT = 263;
  /** RegularExpression Id. */
  int OVERFLOW = 264;
  /** RegularExpression Id. */
  int PACKED_DECIMAL = 265;
  /** RegularExpression Id. */
  int PADDING = 266;
  /** RegularExpression Id. */
  int PAGE = 267;
  /** RegularExpression Id. */
  int PAGE_COUNTER = 268;
  /** RegularExpression Id. */
  int PASSWORD = 269;
  /** RegularExpression Id. */
  int PERFORM = 270;
  /** RegularExpression Id. */
  int PF = 271;
  /** RegularExpression Id. */
  int PH = 272;
  /** RegularExpression Id. */
  int PIC = 273;
  /** RegularExpression Id. */
  int PICTURE = 274;
  /** RegularExpression Id. */
  int PLUS = 275;
  /** RegularExpression Id. */
  int POINTER = 276;
  /** RegularExpression Id. */
  int POSITION = 277;
  /** RegularExpression Id. */
  int POSITIVE = 278;
  /** RegularExpression Id. */
  int PRINTING = 279;
  /** RegularExpression Id. */
  int PROCEDURE = 280;
  /** RegularExpression Id. */
  int PROCEDURE_POINTER = 281;
  /** RegularExpression Id. */
  int PROCEDURES = 282;
  /** RegularExpression Id. */
  int PROCEED = 283;
  /** RegularExpression Id. */
  int PROGRAM = 284;
  /** RegularExpression Id. */
  int PROGRAM_ID = 285;
  /** RegularExpression Id. */
  int PROGRAM_STATUS = 286;
  /** RegularExpression Id. */
  int PROMPT = 287;
  /** RegularExpression Id. */
  int PROTECTED = 288;
  /** RegularExpression Id. */
  int PURGE = 289;
  /** RegularExpression Id. */
  int QUEUE = 290;
  /** RegularExpression Id. */
  int QUOTE = 291;
  /** RegularExpression Id. */
  int QUOTES = 292;
  /** RegularExpression Id. */
  int RANDOM = 293;
  /** RegularExpression Id. */
  int RD = 294;
  /** RegularExpression Id. */
  int READ = 295;
  /** RegularExpression Id. */
  int RECEIVE = 296;
  /** RegularExpression Id. */
  int RECEIVE_CONTROL = 297;
  /** RegularExpression Id. */
  int RECORD = 298;
  /** RegularExpression Id. */
  int RECORDING = 299;
  /** RegularExpression Id. */
  int RECORDS = 300;
  /** RegularExpression Id. */
  int REDEFINES = 301;
  /** RegularExpression Id. */
  int REEL = 302;
  /** RegularExpression Id. */
  int REFERENCE = 303;
  /** RegularExpression Id. */
  int REFERENCES = 304;
  /** RegularExpression Id. */
  int RELATIVE = 305;
  /** RegularExpression Id. */
  int RELEASE = 306;
  /** RegularExpression Id. */
  int REMAINDER = 307;
  /** RegularExpression Id. */
  int REMOVAL = 308;
  /** RegularExpression Id. */
  int RENAMES = 309;
  /** RegularExpression Id. */
  int REPLACE = 310;
  /** RegularExpression Id. */
  int REPLACING = 311;
  /** RegularExpression Id. */
  int REPLY = 312;
  /** RegularExpression Id. */
  int REPORT = 313;
  /** RegularExpression Id. */
  int REPORTING = 314;
  /** RegularExpression Id. */
  int REPORTS = 315;
  /** RegularExpression Id. */
  int RERUN = 316;
  /** RegularExpression Id. */
  int RESERVE = 317;
  /** RegularExpression Id. */
  int RESET = 318;
  /** RegularExpression Id. */
  int RETURN = 319;
  /** RegularExpression Id. */
  int RETURN_CODE = 320;
  /** RegularExpression Id. */
  int RETURNED = 321;
  /** RegularExpression Id. */
  int REVERSED = 322;
  /** RegularExpression Id. */
  int REWIND = 323;
  /** RegularExpression Id. */
  int REWRITE = 324;
  /** RegularExpression Id. */
  int RF = 325;
  /** RegularExpression Id. */
  int RH = 326;
  /** RegularExpression Id. */
  int RIGHT = 327;
  /** RegularExpression Id. */
  int ROUNDED = 328;
  /** RegularExpression Id. */
  int RUN = 329;
  /** RegularExpression Id. */
  int SAME = 330;
  /** RegularExpression Id. */
  int SD = 331;
  /** RegularExpression Id. */
  int SEARCH = 332;
  /** RegularExpression Id. */
  int SECTION = 333;
  /** RegularExpression Id. */
  int SECURITY = 334;
  /** RegularExpression Id. */
  int SEGMENT = 335;
  /** RegularExpression Id. */
  int SEGMENT_LIMIT = 336;
  /** RegularExpression Id. */
  int SELECT = 337;
  /** RegularExpression Id. */
  int SEND = 338;
  /** RegularExpression Id. */
  int SENTENCE = 339;
  /** RegularExpression Id. */
  int SEPARATE = 340;
  /** RegularExpression Id. */
  int SEQUENCE = 341;
  /** RegularExpression Id. */
  int SEQUENTIAL = 342;
  /** RegularExpression Id. */
  int SET = 343;
  /** RegularExpression Id. */
  int SHARED = 344;
  /** RegularExpression Id. */
  int SHIFT_IN = 345;
  /** RegularExpression Id. */
  int SHIFT_OUT = 346;
  /** RegularExpression Id. */
  int SIGN = 347;
  /** RegularExpression Id. */
  int SIZE = 348;
  /** RegularExpression Id. */
  int SORT = 349;
  /** RegularExpression Id. */
  int SORT_CONTROL = 350;
  /** RegularExpression Id. */
  int SORT_CORE_SIZE = 351;
  /** RegularExpression Id. */
  int SORT_FILE_SIZE = 352;
  /** RegularExpression Id. */
  int SORT_MERGE = 353;
  /** RegularExpression Id. */
  int SORT_MESSAGE = 354;
  /** RegularExpression Id. */
  int SORT_MODE_SIZE = 355;
  /** RegularExpression Id. */
  int SORT_RETURN = 356;
  /** RegularExpression Id. */
  int SOURCE = 357;
  /** RegularExpression Id. */
  int SOURCE_COMPUTER = 358;
  /** RegularExpression Id. */
  int SPACE = 359;
  /** RegularExpression Id. */
  int SPACES = 360;
  /** RegularExpression Id. */
  int SPECIAL_NAMES = 361;
  /** RegularExpression Id. */
  int STANDARD = 362;
  /** RegularExpression Id. */
  int STANDARD_1 = 363;
  /** RegularExpression Id. */
  int STANDARD_2 = 364;
  /** RegularExpression Id. */
  int START = 365;
  /** RegularExpression Id. */
  int STATUS = 366;
  /** RegularExpression Id. */
  int STOP = 367;
  /** RegularExpression Id. */
  int STRING = 368;
  /** RegularExpression Id. */
  int SUB_QUEUE_1 = 369;
  /** RegularExpression Id. */
  int SUB_QUEUE_2 = 370;
  /** RegularExpression Id. */
  int SUB_QUEUE_3 = 371;
  /** RegularExpression Id. */
  int SUBTRACT = 372;
  /** RegularExpression Id. */
  int SUM = 373;
  /** RegularExpression Id. */
  int SUPPRESS = 374;
  /** RegularExpression Id. */
  int SYMBOLIC = 375;
  /** RegularExpression Id. */
  int SYNC = 376;
  /** RegularExpression Id. */
  int SYNCHRONIZED = 377;
  /** RegularExpression Id. */
  int TABLE = 378;
  /** RegularExpression Id. */
  int TALLY = 379;
  /** RegularExpression Id. */
  int TALLYING = 380;
  /** RegularExpression Id. */
  int TAPE = 381;
  /** RegularExpression Id. */
  int TERMINAL = 382;
  /** RegularExpression Id. */
  int TERMINATE = 383;
  /** RegularExpression Id. */
  int TEST = 384;
  /** RegularExpression Id. */
  int TEXT = 385;
  /** RegularExpression Id. */
  int THAN = 386;
  /** RegularExpression Id. */
  int THEN = 387;
  /** RegularExpression Id. */
  int THROUGH = 388;
  /** RegularExpression Id. */
  int THRU = 389;
  /** RegularExpression Id. */
  int TIME = 390;
  /** RegularExpression Id. */
  int TIMES = 391;
  /** RegularExpression Id. */
  int TO = 392;
  /** RegularExpression Id. */
  int TOP = 393;
  /** RegularExpression Id. */
  int TRAILING = 394;
  /** RegularExpression Id. */
  int TRUE = 395;
  /** RegularExpression Id. */
  int TYPE = 396;
  /** RegularExpression Id. */
  int UNIT = 397;
  /** RegularExpression Id. */
  int UNLOCK = 398;
  /** RegularExpression Id. */
  int UNLOCKFILE = 399;
  /** RegularExpression Id. */
  int UNLOCKRECORD = 400;
  /** RegularExpression Id. */
  int UNSTRING = 401;
  /** RegularExpression Id. */
  int UNTIL = 402;
  /** RegularExpression Id. */
  int UP = 403;
  /** RegularExpression Id. */
  int UPON = 404;
  /** RegularExpression Id. */
  int USAGE = 405;
  /** RegularExpression Id. */
  int USE = 406;
  /** RegularExpression Id. */
  int USING = 407;
  /** RegularExpression Id. */
  int VALUE = 408;
  /** RegularExpression Id. */
  int VALUES = 409;
  /** RegularExpression Id. */
  int VARYING = 410;
  /** RegularExpression Id. */
  int WHEN = 411;
  /** RegularExpression Id. */
  int WHEN_COMPILED = 412;
  /** RegularExpression Id. */
  int WITH = 413;
  /** RegularExpression Id. */
  int WORDS = 414;
  /** RegularExpression Id. */
  int WORKING_STORAGE = 415;
  /** RegularExpression Id. */
  int WRITE = 416;
  /** RegularExpression Id. */
  int ZERO = 417;
  /** RegularExpression Id. */
  int ZEROS = 418;
  /** RegularExpression Id. */
  int ZEROES = 419;
  /** RegularExpression Id. */
  int F_ACOS = 420;
  /** RegularExpression Id. */
  int F_ANNUITY = 421;
  /** RegularExpression Id. */
  int F_ASIN = 422;
  /** RegularExpression Id. */
  int F_ATAN = 423;
  /** RegularExpression Id. */
  int F_CHAR = 424;
  /** RegularExpression Id. */
  int F_COS = 425;
  /** RegularExpression Id. */
  int F_CURRENT_DATE = 426;
  /** RegularExpression Id. */
  int F_DATE_OF_INTEGER = 427;
  /** RegularExpression Id. */
  int F_DATE_TO_YYYYMMDD = 428;
  /** RegularExpression Id. */
  int F_DATEVAL = 429;
  /** RegularExpression Id. */
  int F_DAY_OF_INTEGER = 430;
  /** RegularExpression Id. */
  int F_DAY_TO_YYYYDDD = 431;
  /** RegularExpression Id. */
  int F_DISPLAY_OF = 432;
  /** RegularExpression Id. */
  int F_FACTORIAL = 433;
  /** RegularExpression Id. */
  int F_INTEGER = 434;
  /** RegularExpression Id. */
  int F_INTEGER_OF_DATE = 435;
  /** RegularExpression Id. */
  int F_INTEGER_OF_DAY = 436;
  /** RegularExpression Id. */
  int F_INTEGER_PART = 437;
  /** RegularExpression Id. */
  int F_LENGTH = 438;
  /** RegularExpression Id. */
  int F_LOG = 439;
  /** RegularExpression Id. */
  int F_LOG10 = 440;
  /** RegularExpression Id. */
  int F_LOWER_CASE = 441;
  /** RegularExpression Id. */
  int F_MAX = 442;
  /** RegularExpression Id. */
  int F_MEAN = 443;
  /** RegularExpression Id. */
  int F_MEDIAN = 444;
  /** RegularExpression Id. */
  int F_MIDRANGE = 445;
  /** RegularExpression Id. */
  int F_MIN = 446;
  /** RegularExpression Id. */
  int F_MOD = 447;
  /** RegularExpression Id. */
  int F_NATIONAL_OF = 448;
  /** RegularExpression Id. */
  int F_NUMVAL = 449;
  /** RegularExpression Id. */
  int F_NUMVAL_C = 450;
  /** RegularExpression Id. */
  int F_ORD = 451;
  /** RegularExpression Id. */
  int F_ORD_MAX = 452;
  /** RegularExpression Id. */
  int F_ORD_MIN = 453;
  /** RegularExpression Id. */
  int F_PRESENT_VALUE = 454;
  /** RegularExpression Id. */
  int F_RANDOM = 455;
  /** RegularExpression Id. */
  int F_RANGE = 456;
  /** RegularExpression Id. */
  int F_REM = 457;
  /** RegularExpression Id. */
  int F_REVERSE = 458;
  /** RegularExpression Id. */
  int F_SIN = 459;
  /** RegularExpression Id. */
  int F_SQRT = 460;
  /** RegularExpression Id. */
  int F_STANDARD_DEVIATION = 461;
  /** RegularExpression Id. */
  int F_SUM = 462;
  /** RegularExpression Id. */
  int F_TAN = 463;
  /** RegularExpression Id. */
  int F_UNDATE = 464;
  /** RegularExpression Id. */
  int F_UPPER_CASE = 465;
  /** RegularExpression Id. */
  int F_VARIANCE = 466;
  /** RegularExpression Id. */
  int F_WHEN_COMPILED = 467;
  /** RegularExpression Id. */
  int F_YEAR_TO_YYYY = 468;
  /** RegularExpression Id. */
  int F_YEARWINDOW = 469;
  /** RegularExpression Id. */
  int CONCAT = 470;
  /** RegularExpression Id. */
  int HEXNUMBER = 471;
  /** RegularExpression Id. */
  int LEVEL_66 = 472;
  /** RegularExpression Id. */
  int LEVEL_77 = 473;
  /** RegularExpression Id. */
  int LEVEL_78 = 474;
  /** RegularExpression Id. */
  int LEVEL_88 = 475;
  /** RegularExpression Id. */
  int LEVEL_NUMBER = 476;
  /** RegularExpression Id. */
  int INTEGER = 477;
  /** RegularExpression Id. */
  int COMMA_INTEGER = 478;
  /** RegularExpression Id. */
  int COMMACHAR = 479;
  /** RegularExpression Id. */
  int LPARENCHAR = 480;
  /** RegularExpression Id. */
  int MINUSCHAR = 481;
  /** RegularExpression Id. */
  int MINUSCHAR_SUBS = 482;
  /** RegularExpression Id. */
  int RPARENCHAR = 483;
  /** RegularExpression Id. */
  int COLONCHAR = 484;
  /** RegularExpression Id. */
  int DOUBLEDQUOTECHAR = 485;
  /** RegularExpression Id. */
  int QUOTECHAR = 486;
  /** RegularExpression Id. */
  int DOUBLEDAPOSTROPHE = 487;
  /** RegularExpression Id. */
  int APOSTROPHE = 488;
  /** RegularExpression Id. */
  int PLUSCHAR = 489;
  /** RegularExpression Id. */
  int PLUSCHAR_SUBS = 490;
  /** RegularExpression Id. */
  int ASTERISKCHAR = 491;
  /** RegularExpression Id. */
  int SLASHCHAR = 492;
  /** RegularExpression Id. */
  int DOLLARCHAR = 493;
  /** RegularExpression Id. */
  int LESSTHANCHAR = 494;
  /** RegularExpression Id. */
  int MORETHANCHAR = 495;
  /** RegularExpression Id. */
  int EQUALCHAR = 496;
  /** RegularExpression Id. */
  int MORETHANOREQUAL = 497;
  /** RegularExpression Id. */
  int LESSTHANOREQUAL = 498;
  /** RegularExpression Id. */
  int POW = 499;
  /** RegularExpression Id. */
  int JAVA_NE = 500;
  /** RegularExpression Id. */
  int NOTEQUALCHAR = 501;
  /** RegularExpression Id. */
  int ENVIRONMENT_DIVISION = 502;
  /** RegularExpression Id. */
  int DATA_DIVISION = 503;
  /** RegularExpression Id. */
  int PROCEDURE_DIVISION = 504;
  /** RegularExpression Id. */
  int DOT2 = 505;
  /** RegularExpression Id. */
  int AUTHOR2 = 506;
  /** RegularExpression Id. */
  int SECURITY2 = 507;
  /** RegularExpression Id. */
  int DATE_WRITTEN2 = 508;
  /** RegularExpression Id. */
  int DATE_COMPILED2 = 509;
  /** RegularExpression Id. */
  int INSTALLATION2 = 510;
  /** RegularExpression Id. */
  int COMMENT2 = 511;
  /** RegularExpression Id. */
  int PICTURE_STRING = 512;
  /** RegularExpression Id. */
  int PICTURE_IS = 513;
  /** RegularExpression Id. */
  int PICTURE_SPACE = 514;
  /** RegularExpression Id. */
  int K_ALL = 515;
  /** RegularExpression Id. */
  int K_ALTER = 516;
  /** RegularExpression Id. */
  int K_AND = 517;
  /** RegularExpression Id. */
  int K_ANY = 518;
  /** RegularExpression Id. */
  int K_AS = 519;
  /** RegularExpression Id. */
  int K_ASC = 520;
  /** RegularExpression Id. */
  int K_BEGIN = 521;
  /** RegularExpression Id. */
  int K_BETWEEN = 522;
  /** RegularExpression Id. */
  int K_BINARY_SQL_INTEGER = 523;
  /** RegularExpression Id. */
  int K_BOOLEAN = 524;
  /** RegularExpression Id. */
  int K_BY = 525;
  /** RegularExpression Id. */
  int K_CHAR = 526;
  /** RegularExpression Id. */
  int K_CLOSE = 527;
  /** RegularExpression Id. */
  int K_COMMENT = 528;
  /** RegularExpression Id. */
  int K_COMMIT = 529;
  /** RegularExpression Id. */
  int K_CONNECT = 530;
  /** RegularExpression Id. */
  int K_CONSTANT = 531;
  /** RegularExpression Id. */
  int K_CURRENT = 532;
  /** RegularExpression Id. */
  int K_CURSOR = 533;
  /** RegularExpression Id. */
  int K_DATE = 534;
  /** RegularExpression Id. */
  int K_DECLARE = 535;
  /** RegularExpression Id. */
  int K_DEFAULT = 536;
  /** RegularExpression Id. */
  int K_DELETE = 537;
  /** RegularExpression Id. */
  int K_DESC = 538;
  /** RegularExpression Id. */
  int K_DISTINCT = 539;
  /** RegularExpression Id. */
  int K_DO = 540;
  /** RegularExpression Id. */
  int K_ELSE = 541;
  /** RegularExpression Id. */
  int K_ELSIF = 542;
  /** RegularExpression Id. */
  int K_END = 543;
  /** RegularExpression Id. */
  int K_EXCEPTION = 544;
  /** RegularExpression Id. */
  int K_EXCEPTION_INIT = 545;
  /** RegularExpression Id. */
  int K_EXCLUSIVE = 546;
  /** RegularExpression Id. */
  int K_EXISTS = 547;
  /** RegularExpression Id. */
  int K_EXIT = 548;
  /** RegularExpression Id. */
  int K_FETCH = 549;
  /** RegularExpression Id. */
  int K_FLOAT = 550;
  /** RegularExpression Id. */
  int K_FOR = 551;
  /** RegularExpression Id. */
  int K_FROM = 552;
  /** RegularExpression Id. */
  int K_FUNCTION = 553;
  /** RegularExpression Id. */
  int K_GOTO = 554;
  /** RegularExpression Id. */
  int K_GROUP = 555;
  /** RegularExpression Id. */
  int K_HAVING = 556;
  /** RegularExpression Id. */
  int K_IF = 557;
  /** RegularExpression Id. */
  int K_IN = 558;
  /** RegularExpression Id. */
  int K_INCLUDE = 559;
  /** RegularExpression Id. */
  int K_INDEX = 560;
  /** RegularExpression Id. */
  int K_INDICATOR = 561;
  /** RegularExpression Id. */
  int K_INSERT = 562;
  /** RegularExpression Id. */
  int K_SQL_INTEGER = 563;
  /** RegularExpression Id. */
  int K_INTERSECT = 564;
  /** RegularExpression Id. */
  int K_INTO = 565;
  /** RegularExpression Id. */
  int K_IS = 566;
  /** RegularExpression Id. */
  int K_JOIN = 567;
  /** RegularExpression Id. */
  int K_LIKE = 568;
  /** RegularExpression Id. */
  int K_LOCK = 569;
  /** RegularExpression Id. */
  int K_LOOP = 570;
  /** RegularExpression Id. */
  int K_MINUS = 571;
  /** RegularExpression Id. */
  int K_MODE = 572;
  /** RegularExpression Id. */
  int K_NATURAL = 573;
  /** RegularExpression Id. */
  int K_NOT = 574;
  /** RegularExpression Id. */
  int K_NOWAIT = 575;
  /** RegularExpression Id. */
  int K_NULL = 576;
  /** RegularExpression Id. */
  int K_NUMBER = 577;
  /** RegularExpression Id. */
  int K_OF = 578;
  /** RegularExpression Id. */
  int K_ONLY = 579;
  /** RegularExpression Id. */
  int K_OPEN = 580;
  /** RegularExpression Id. */
  int K_OR = 581;
  /** RegularExpression Id. */
  int K_ON = 582;
  /** RegularExpression Id. */
  int K_ORDER = 583;
  /** RegularExpression Id. */
  int K_OTHERS = 584;
  /** RegularExpression Id. */
  int K_OUT = 585;
  /** RegularExpression Id. */
  int K_PACKAGE = 586;
  /** RegularExpression Id. */
  int K_POSITIVE = 587;
  /** RegularExpression Id. */
  int K_PREPARE = 588;
  /** RegularExpression Id. */
  int K_PRAGMA = 589;
  /** RegularExpression Id. */
  int K_PRIOR = 590;
  /** RegularExpression Id. */
  int K_PROCEDURE = 591;
  /** RegularExpression Id. */
  int K_RAISE = 592;
  /** RegularExpression Id. */
  int K_READ = 593;
  /** RegularExpression Id. */
  int K_REAL = 594;
  /** RegularExpression Id. */
  int K_RECORD = 595;
  /** RegularExpression Id. */
  int K_REF = 596;
  /** RegularExpression Id. */
  int K_RETURN = 597;
  /** RegularExpression Id. */
  int K_REVERSE = 598;
  /** RegularExpression Id. */
  int K_ROLLBACK = 599;
  /** RegularExpression Id. */
  int K_ROW = 600;
  /** RegularExpression Id. */
  int K_SAVEPOINT = 601;
  /** RegularExpression Id. */
  int K_SECTION = 602;
  /** RegularExpression Id. */
  int K_SEGMENT = 603;
  /** RegularExpression Id. */
  int K_SELECT = 604;
  /** RegularExpression Id. */
  int K_SESSION = 605;
  /** RegularExpression Id. */
  int K_SET = 606;
  /** RegularExpression Id. */
  int K_SHARE = 607;
  /** RegularExpression Id. */
  int K_SMALLINT = 608;
  /** RegularExpression Id. */
  int K_SQL = 609;
  /** RegularExpression Id. */
  int K_START = 610;
  /** RegularExpression Id. */
  int K_TABLE = 611;
  /** RegularExpression Id. */
  int K_THEN = 612;
  /** RegularExpression Id. */
  int K_TO = 613;
  /** RegularExpression Id. */
  int K_TRANSACTION = 614;
  /** RegularExpression Id. */
  int K_UNION = 615;
  /** RegularExpression Id. */
  int K_UPDATE = 616;
  /** RegularExpression Id. */
  int K_USE = 617;
  /** RegularExpression Id. */
  int K_USING = 618;
  /** RegularExpression Id. */
  int K_VALUES = 619;
  /** RegularExpression Id. */
  int K_VARCHAR2 = 620;
  /** RegularExpression Id. */
  int K_VARCHAR = 621;
  /** RegularExpression Id. */
  int K_WHEN = 622;
  /** RegularExpression Id. */
  int K_WHERE = 623;
  /** RegularExpression Id. */
  int K_WHILE = 624;
  /** RegularExpression Id. */
  int K_WITH = 625;
  /** RegularExpression Id. */
  int K_WORK = 626;
  /** RegularExpression Id. */
  int K_WRITE = 627;
  /** RegularExpression Id. */
  int K_EXECUTE = 628;
  /** RegularExpression Id. */
  int K_WHENEVER = 629;
  /** RegularExpression Id. */
  int K_SQLERROR = 630;
  /** RegularExpression Id. */
  int K_SQLWARNING = 631;
  /** RegularExpression Id. */
  int K_FOUND = 632;
  /** RegularExpression Id. */
  int DO = 633;
  /** RegularExpression Id. */
  int S_NUMBER = 634;
  /** RegularExpression Id. */
  int FLOAT = 635;
  /** RegularExpression Id. */
  int SQL_INTEGER = 636;
  /** RegularExpression Id. */
  int TRIVIAL = 637;
  /** RegularExpression Id. */
  int QUOTEDSTRING = 638;
  /** RegularExpression Id. */
  int COBOL_WORD = 639;
  /** RegularExpression Id. */
  int SQL = 640;
  /** RegularExpression Id. */
  int S_IDENTIFIER = 641;
  /** RegularExpression Id. */
  int SPECIAL_CHARS = 642;
  /** RegularExpression Id. */
  int S_BIND = 643;
  /** RegularExpression Id. */
  int S_CHAR_LITERAL = 644;
  /** RegularExpression Id. */
  int S_QUOTED_IDENTIFIER = 645;
  /** RegularExpression Id. */
  int ANY_CHAR = 646;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int FUNCTION_STATE = 1;
  /** Lexical state. */
  int EXEC_STATE = 2;
  /** Lexical state. */
  int IN_COMMENT2 = 3;
  /** Lexical state. */
  int EXEC_PROC_STATE = 4;
  /** Lexical state. */
  int PICTURE_STATE = 5;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\n\"",
    "<SPACECHAR>",
    "<LETTER>",
    "<DIGIT>",
    "<COMMENT>",
    "<SQL_COMMENT>",
    "<SPACE_SEPARATOR>",
    "<SPACECHAR2>",
    "\".\"",
    "<DOT>",
    "\"exec\"",
    "\"execute\"",
    "\"end-exec\"",
    "\"accept\"",
    "\"access\"",
    "\"add\"",
    "\"address\"",
    "\"advancing\"",
    "\"after\"",
    "\"all\"",
    "\"alphabet\"",
    "\"alphabetic\"",
    "\"alphabetic-lower\"",
    "\"alphabetic-upper\"",
    "\"alphanumeric\"",
    "\"alphanumeric-edited\"",
    "\"also\"",
    "\"alter\"",
    "\"alternate\"",
    "\"and\"",
    "\"any\"",
    "\"approximate\"",
    "\"are\"",
    "\"area\"",
    "\"areas\"",
    "\"ascending\"",
    "\"assign\"",
    "\"at\"",
    "\"author\"",
    "\"before\"",
    "\"beginning\"",
    "\"binary\"",
    "\"blank\"",
    "\"block\"",
    "\"bottom\"",
    "\"by\"",
    "\"call\"",
    "\"cancel\"",
    "\"cd\"",
    "\"cf\"",
    "\"ch\"",
    "\"character\"",
    "\"characters\"",
    "\"class\"",
    "\"clock-units\"",
    "\"close\"",
    "\"cobol\"",
    "\"code\"",
    "\"code-set\"",
    "\"collating\"",
    "\"column\"",
    "\"comma\"",
    "\"common\"",
    "\"communication\"",
    "\"comp\"",
    "\"comp-1\"",
    "\"comp-2\"",
    "\"comp-3\"",
    "\"comp-4\"",
    "\"comp-5\"",
    "\"computational\"",
    "\"computational-1\"",
    "\"computational-2\"",
    "\"computational-3\"",
    "\"computational-4\"",
    "\"computational-5\"",
    "\"compute\"",
    "\"configuration\"",
    "\"contains\"",
    "\"content\"",
    "\"continue\"",
    "\"control\"",
    "\"controls\"",
    "\"converting\"",
    "\"copy\"",
    "\"corr\"",
    "\"corresponding\"",
    "\"count\"",
    "\"currency\"",
    "\"data\"",
    "\"date\"",
    "\"date-compiled\"",
    "\"date-written\"",
    "\"day\"",
    "\"day-of-week\"",
    "\"dbcs\"",
    "\"de\"",
    "\"debug-contents\"",
    "\"debug-item\"",
    "\"debug-line\"",
    "\"debug-name\"",
    "\"debug-sub-1\"",
    "\"debug-sub-2\"",
    "\"debug-sub-3\"",
    "\"debugging\"",
    "\"decimal-point\"",
    "\"declaratives\"",
    "\"delete\"",
    "\"delimited\"",
    "\"delimiter\"",
    "\"depending\"",
    "\"descending\"",
    "\"destination\"",
    "\"detail\"",
    "\"disable\"",
    "\"disk\"",
    "\"display\"",
    "\"display-1\"",
    "\"divide\"",
    "\"division\"",
    "\"down\"",
    "\"duplicates\"",
    "\"dynamic\"",
    "\"egcs\"",
    "\"egi\"",
    "\"else\"",
    "\"emi\"",
    "\"enable\"",
    "\"end\"",
    "\"end-add\"",
    "\"end-call\"",
    "\"end-compute\"",
    "\"end-delete\"",
    "\"end-divide\"",
    "\"end-evaluate\"",
    "\"end-if\"",
    "\"end-multiply\"",
    "\"end-of-page\"",
    "\"end-perform\"",
    "\"end-read\"",
    "\"end-receive\"",
    "\"end-return\"",
    "\"end-rewrite\"",
    "\"end-search\"",
    "\"end-start\"",
    "\"end-string\"",
    "\"end-subtract\"",
    "\"end-unstring\"",
    "\"end-write\"",
    "\"endinf\"",
    "\"enter\"",
    "\"entry\"",
    "\"environment\"",
    "\"eop\"",
    "\"equal\"",
    "\"equals\"",
    "\"error\"",
    "\"esi\"",
    "\"evaluate\"",
    "\"every\"",
    "\"exception\"",
    "\"exit\"",
    "\"extend\"",
    "\"external\"",
    "\"false\"",
    "\"fd\"",
    "\"file\"",
    "\"file-control\"",
    "\"filler\"",
    "\"final\"",
    "\"first\"",
    "\"footing\"",
    "\"for\"",
    "\"from\"",
    "\"function\"",
    "\"function-pointer\"",
    "\"generate\"",
    "\"goback\"",
    "\"generic\"",
    "\"giving\"",
    "\"global\"",
    "\"go\"",
    "\"greater\"",
    "\"group\"",
    "\"heading\"",
    "\"high-value\"",
    "\"high-values\"",
    "\"i-o\"",
    "\"i-o-control\"",
    "\"id\"",
    "\"identification\"",
    "\"if\"",
    "\"implicit\"",
    "\"in\"",
    "\"index\"",
    "\"indexed\"",
    "\"indicate\"",
    "\"initial\"",
    "\"initialize\"",
    "\"initiate\"",
    "\"input\"",
    "\"input-output\"",
    "\"inspect\"",
    "\"installation\"",
    "\"into\"",
    "\"invalid\"",
    "\"is\"",
    "\"just\"",
    "\"justified\"",
    "\"justify\"",
    "\"kanji\"",
    "\"key\"",
    "\"label\"",
    "\"last\"",
    "\"leading\"",
    "\"left\"",
    "\"length\"",
    "\"less\"",
    "\"limit\"",
    "\"limits\"",
    "\"linage\"",
    "\"linage-counter\"",
    "\"line\"",
    "\"lines\"",
    "\"line-counter\"",
    "\"linkage\"",
    "\"lock\"",
    "\"lockfile\"",
    "\"low-value\"",
    "\"low-values\"",
    "\"memory\"",
    "\"merge\"",
    "\"message\"",
    "\"mode\"",
    "\"modules\"",
    "\"more-labels\"",
    "\"move\"",
    "\"multiple\"",
    "\"multiply\"",
    "\"native\"",
    "\"negative\"",
    "\"next\"",
    "\"no\"",
    "\"not\"",
    "\"null\"",
    "\"nulls\"",
    "\"number\"",
    "\"numeric\"",
    "\"numeric-edited\"",
    "\"object\"",
    "\"object-computer\"",
    "\"occurs\"",
    "\"of\"",
    "\"off\"",
    "\"omitted\"",
    "\"on\"",
    "\"open\"",
    "\"optional\"",
    "\"or\"",
    "\"order\"",
    "\"organization\"",
    "\"other\"",
    "\"output\"",
    "\"overflow\"",
    "\"packed-decimal\"",
    "\"padding\"",
    "\"page\"",
    "\"page-counter\"",
    "\"password\"",
    "\"perform\"",
    "\"pf\"",
    "\"ph\"",
    "\"pic\"",
    "\"picture\"",
    "\"plus\"",
    "\"pointer\"",
    "\"position\"",
    "\"positive\"",
    "\"printing\"",
    "\"procedure\"",
    "\"procedure-pointer\"",
    "\"procedures\"",
    "\"proceed\"",
    "\"program\"",
    "\"program-id\"",
    "\"program-status\"",
    "\"prompt\"",
    "\"protected\"",
    "\"purge\"",
    "\"queue\"",
    "\"quote\"",
    "\"quotes\"",
    "\"random\"",
    "\"rd\"",
    "\"read\"",
    "\"receive\"",
    "\"receive-control\"",
    "\"record\"",
    "\"recording\"",
    "\"records\"",
    "\"redefines\"",
    "\"reel\"",
    "\"reference\"",
    "\"references\"",
    "\"relative\"",
    "\"release\"",
    "\"remainder\"",
    "\"removal\"",
    "\"renames\"",
    "\"replace\"",
    "\"replacing\"",
    "\"reply\"",
    "\"report\"",
    "\"reporting\"",
    "\"reports\"",
    "\"rerun\"",
    "\"reserve\"",
    "\"reset\"",
    "\"return\"",
    "\"return-code\"",
    "\"returned\"",
    "\"reversed\"",
    "\"rewind\"",
    "\"rewrite\"",
    "\"rf\"",
    "\"rh\"",
    "\"right\"",
    "\"rounded\"",
    "\"run\"",
    "\"same\"",
    "\"sd\"",
    "\"search\"",
    "\"section\"",
    "\"security\"",
    "\"segment\"",
    "\"segment-limit\"",
    "\"select\"",
    "\"send\"",
    "\"sentence\"",
    "\"separate\"",
    "\"sequence\"",
    "\"sequential\"",
    "\"set\"",
    "\"shared\"",
    "\"shift-in\"",
    "\"shift-out\"",
    "\"sign\"",
    "\"size\"",
    "\"sort\"",
    "\"sort-control\"",
    "\"sort-core-size\"",
    "\"sort-file-size\"",
    "\"sort-merge\"",
    "\"sort-message\"",
    "\"sort-mode-size\"",
    "\"sort-return\"",
    "\"source\"",
    "\"source-computer\"",
    "\"space\"",
    "\"spaces\"",
    "\"special-names\"",
    "\"standard\"",
    "\"standard-1\"",
    "\"standard-2\"",
    "\"start\"",
    "\"status\"",
    "\"stop\"",
    "\"string\"",
    "\"sub-queue-1\"",
    "\"sub-queue-2\"",
    "\"sub-queue-3\"",
    "\"subtract\"",
    "\"sum\"",
    "\"suppress\"",
    "\"symbolic\"",
    "\"sync\"",
    "\"synchronized\"",
    "\"table\"",
    "\"tally\"",
    "\"tallying\"",
    "\"tape\"",
    "\"terminal\"",
    "\"terminate\"",
    "\"test\"",
    "\"text\"",
    "\"than\"",
    "\"then\"",
    "\"through\"",
    "\"thru\"",
    "\"time\"",
    "\"times\"",
    "\"to\"",
    "\"top\"",
    "\"trailing\"",
    "\"true\"",
    "\"type\"",
    "\"unit\"",
    "\"unlock\"",
    "\"unlockfile\"",
    "\"unlockrecord\"",
    "\"unstring\"",
    "\"until\"",
    "\"up\"",
    "\"upon\"",
    "\"usage\"",
    "\"use\"",
    "\"using\"",
    "\"value\"",
    "\"values\"",
    "\"varying\"",
    "\"when\"",
    "\"when-compiled\"",
    "\"with\"",
    "\"words\"",
    "\"working-storage\"",
    "\"write\"",
    "\"zero\"",
    "\"zeros\"",
    "\"zeroes\"",
    "\"ACOS\"",
    "\"ANNUITY\"",
    "\"ASIN\"",
    "\"ATAN\"",
    "\"CHAR\"",
    "\"COS\"",
    "\"CURRENT-DATE\"",
    "\"DATE-OF-INTEGER\"",
    "\"DATE-TO-YYYYMMDD\"",
    "\"DATEVAL\"",
    "\"DAY-OF-INTEGER\"",
    "\"DAY-TO-YYYYDDD\"",
    "\"DISPLAY-OF\"",
    "\"FACTORIAL\"",
    "\"INTEGER\"",
    "\"INTEGER-OF-DATE\"",
    "\"INTEGER-OF-DAY\"",
    "\"INTEGER-PART\"",
    "\"LENGTH\"",
    "\"LOG\"",
    "\"LOG10\"",
    "\"LOWER-CASE\"",
    "\"MAX\"",
    "\"MEAN\"",
    "\"MEDIAN\"",
    "\"MIDRANGE\"",
    "\"MIN\"",
    "\"MOD\"",
    "\"NATIONAL-OF\"",
    "\"NUMVAL\"",
    "\"NUMVAL-C\"",
    "\"ORD\"",
    "\"ORD-MAX\"",
    "\"ORD-MIN\"",
    "\"PRESENT-VALUE\"",
    "\"RANDOM\"",
    "\"RANGE\"",
    "\"REM\"",
    "\"REVERSE\"",
    "\"SIN\"",
    "\"SQRT\"",
    "\"STANDARD-DEVIATION\"",
    "\"SUM\"",
    "\"TAN\"",
    "\"UNDATE\"",
    "\"UPPER-CASE\"",
    "\"VARIANCE\"",
    "\"WHEN-COMPILED\"",
    "\"YEAR-TO-YYYY\"",
    "\"YEARWINDOW\"",
    "\"||\"",
    "<HEXNUMBER>",
    "\"66\"",
    "\"77\"",
    "\"78\"",
    "\"88\"",
    "<LEVEL_NUMBER>",
    "<INTEGER>",
    "<COMMA_INTEGER>",
    "\",\"",
    "\"(\"",
    "\"-\"",
    "<MINUSCHAR_SUBS>",
    "\")\"",
    "\":\"",
    "\"\\\"\\\"\"",
    "\"\\\"\"",
    "\"\\\'\\\'\"",
    "\"\\\'\"",
    "\"+\"",
    "<PLUSCHAR_SUBS>",
    "\"*\"",
    "\"/\"",
    "\"$\"",
    "\"<\"",
    "\">\"",
    "\"=\"",
    "<MORETHANOREQUAL>",
    "<LESSTHANOREQUAL>",
    "\"**\"",
    "\"!=\"",
    "\"<>\"",
    "<ENVIRONMENT_DIVISION>",
    "<DATA_DIVISION>",
    "<PROCEDURE_DIVISION>",
    "\".\"",
    "\"author\"",
    "\"security\"",
    "\"date-written\"",
    "\"date-compiled\"",
    "\"installation\"",
    "<COMMENT2>",
    "<PICTURE_STRING>",
    "\"is\"",
    "<PICTURE_SPACE>",
    "\"ALL\"",
    "\"ALTER\"",
    "\"AND\"",
    "\"ANY\"",
    "\"AS\"",
    "\"ASC\"",
    "\"BEGIN\"",
    "\"BETWEEN\"",
    "\"BINARY_SQL_INTEGER\"",
    "\"BOOLEAN\"",
    "\"BY\"",
    "\"CHAR\"",
    "\"CLOSE\"",
    "\"COMMENT\"",
    "\"COMMIT\"",
    "\"CONNECT\"",
    "\"CONSTANT\"",
    "\"CURRENT\"",
    "\"CURSOR\"",
    "\"DATE\"",
    "\"DECLARE\"",
    "\"DEFAULT\"",
    "\"DELETE\"",
    "\"DESC\"",
    "\"DISTINCT\"",
    "\"DO\"",
    "\"ELSE\"",
    "\"ELSIF\"",
    "\"END\"",
    "\"EXCEPTION\"",
    "\"EXCEPTION_INIT\"",
    "\"EXCLUSIVE\"",
    "\"EXISTS\"",
    "\"EXIT\"",
    "\"FETCH\"",
    "\"FLOAT\"",
    "\"FOR\"",
    "\"FROM\"",
    "\"FUNCTION\"",
    "\"GOTO\"",
    "\"GROUP\"",
    "\"HAVING\"",
    "\"IF\"",
    "\"IN\"",
    "\"INCLUDE\"",
    "\"INDEX\"",
    "\"INDICATOR\"",
    "\"INSERT\"",
    "\"SQL_INTEGER\"",
    "\"INTERSECT\"",
    "\"INTO\"",
    "\"IS\"",
    "\"JOIN\"",
    "\"LIKE\"",
    "\"LOCK\"",
    "\"LOOP\"",
    "\"MINUS\"",
    "\"MODE\"",
    "\"NATURAL\"",
    "\"NOT\"",
    "\"NOWAIT\"",
    "\"NULL\"",
    "\"NUMBER\"",
    "\"OF\"",
    "\"ONLY\"",
    "\"OPEN\"",
    "\"OR\"",
    "\"ON\"",
    "\"ORDER\"",
    "\"OTHERS\"",
    "\"OUT\"",
    "\"PACKAGE\"",
    "\"POSITIVE\"",
    "\"PREPARE\"",
    "\"PRAGMA\"",
    "\"PRIOR\"",
    "\"PROCEDURE\"",
    "\"RAISE\"",
    "\"READ\"",
    "\"REAL\"",
    "\"RECORD\"",
    "\"REF\"",
    "\"RETURN\"",
    "\"REVERSE\"",
    "\"ROLLBACK\"",
    "\"ROW\"",
    "\"SAVEPOINT\"",
    "\"SECTION\"",
    "\"SEGMENT\"",
    "\"SELECT\"",
    "\"SESSION\"",
    "\"SET\"",
    "\"SHARE\"",
    "\"SMALLINT\"",
    "\"SQL\"",
    "\"START\"",
    "\"TABLE\"",
    "\"THEN\"",
    "\"TO\"",
    "\"TRANSACTION\"",
    "\"UNION\"",
    "\"UPDATE\"",
    "\"USE\"",
    "\"USING\"",
    "\"VALUES\"",
    "\"VARCHAR2\"",
    "\"VARCHAR\"",
    "\"WHEN\"",
    "\"WHERE\"",
    "\"WHILE\"",
    "\"WITH\"",
    "\"WORK\"",
    "\"WRITE\"",
    "\"EXECUTE\"",
    "\"WHENEVER\"",
    "<K_SQLERROR>",
    "<K_SQLWARNING>",
    "<K_FOUND>",
    "<DO>",
    "<S_NUMBER>",
    "<FLOAT>",
    "<SQL_INTEGER>",
    "<TRIVIAL>",
    "<QUOTEDSTRING>",
    "<COBOL_WORD>",
    "<SQL>",
    "<S_IDENTIFIER>",
    "<SPECIAL_CHARS>",
    "<S_BIND>",
    "<S_CHAR_LITERAL>",
    "<S_QUOTED_IDENTIFIER>",
    "<ANY_CHAR>",
    "\";\"",
    "\"||\"",
    "\"%FOUND\"",
    "\"%NOTFOUND\"",
    "\"%ISOPEN\"",
    "\"%ROWCOUNT\"",
    "\"#\"",
  };

}
