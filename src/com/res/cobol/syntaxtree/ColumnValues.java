//
// Generated by JTB 1.3.2
//

package com.res.cobol.syntaxtree;

/**
 * Grammar production:
 * <PRE>
 * tableColumn -> TableColumn()
 * nodeToken -> "="
 * updatedValue -> UpdatedValue()
 * nodeListOptional -> ( &lt;COMMACHAR&gt; TableColumn() "=" UpdatedValue() )*
 * </PRE>
 */
public class ColumnValues extends com.res.cobol.RESNode implements Node {
   private Node parent;
   public TableColumn tableColumn;
   public NodeToken nodeToken;
   public UpdatedValue updatedValue;
   public NodeListOptional nodeListOptional;

   public ColumnValues(TableColumn n0, NodeToken n1, UpdatedValue n2, NodeListOptional n3) {
      tableColumn = n0;
      if ( tableColumn != null ) tableColumn.setParent(this);
      nodeToken = n1;
      if ( nodeToken != null ) nodeToken.setParent(this);
      updatedValue = n2;
      if ( updatedValue != null ) updatedValue.setParent(this);
      nodeListOptional = n3;
      if ( nodeListOptional != null ) nodeListOptional.setParent(this);
   }

   public ColumnValues() {}

   public void accept(com.res.cobol.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(com.res.cobol.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(com.res.cobol.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(com.res.cobol.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
   public void setParent(Node n) { parent = n; }
   public Node getParent()       { return parent; }
}

